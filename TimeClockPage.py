#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Apr 11, 2020 05:04:13 PM +0700  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import TimeClockPage_support
import time
import Employee

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    root.wm_iconbitmap('icon.ico')
    TimeClockPage_support.set_Tk_var()
    top = Toplevel1 (root)
    TimeClockPage_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    TimeClockPage_support.set_Tk_var()
    top = Toplevel1 (w)
    TimeClockPage_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:

    saveEntry = ''
    
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font10 = "-family {Segoe UI} -size 18 -weight bold"
        font11 = "-family {Segoe UI} -size 18"
        font12 = "-family {Arial} -size 14"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("400x450+700+152")
        top.minsize(116, 1)
        top.maxsize(1364, 750)
        top.resizable(1, 1)
        top.title("Easy Time Clock")
        top.configure(background="#d9d9d9")

        self.time2 = time.strftime('%H:%M:%S')

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.025, rely=0.044, height=31, width=136)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font10)
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Time Clock''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.05, rely=0.133, height=31, width=174)
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(cursor="fleur")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font=font11)
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''06:55:30''')

        self.IDEntry = ttk.Entry(top)
        self.IDEntry.place(relx=0.05, rely=0.222, relheight=0.069, relwidth=0.44)

        self.IDEntry.configure(font=font12)
        self.IDEntry.configure(takefocus="")
        self.IDEntry.configure(cursor="fleur")

        self.Canvas1 = tk.Canvas(top)
        self.Canvas1.place(relx=0.525, rely=0.133, relheight=0.362
                , relwidth=0.408)
        self.Canvas1.configure(background="#d9d9d9")
        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(insertbackground="black")
        self.Canvas1.configure(relief="ridge")
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(selectforeground="black")

        self.TButton1 = ttk.Button(top)
        self.TButton1.place(relx=0.05, rely=0.311, height=25, width=86)
        self.TButton1.configure(takefocus="")
        self.TButton1.configure(text='''Submit''')
        self.TButton1.configure(command = submitButton)

        self.TButton1_1 = ttk.Button(top)
        self.TButton1_1.place(relx=0.275, rely=0.311, height=25, width=86)
        self.TButton1_1.configure(takefocus="")
        self.TButton1_1.configure(text='''Clear''')

        self.Checkbutton1 = tk.Checkbutton(top)
        self.Checkbutton1.place(relx=0.05, rely=0.378, relheight=0.033
                , relwidth=0.228)
        self.Checkbutton1.configure(activebackground="#ececec")
        self.Checkbutton1.configure(activeforeground="#000000")
        self.Checkbutton1.configure(anchor='w')
        self.Checkbutton1.configure(background="#d9d9d9")
        self.Checkbutton1.configure(disabledforeground="#a3a3a3")
        self.Checkbutton1.configure(foreground="#000000")
        self.Checkbutton1.configure(highlightbackground="#d9d9d9")
        self.Checkbutton1.configure(highlightcolor="black")
        self.Checkbutton1.configure(justify='left')
        self.Checkbutton1.configure(text='''Auto Submit''')
        self.Checkbutton1.configure(variable=TimeClockPage_support.che52)

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.05, rely=0.444, relheight=0.056, relwidth=0.438)

        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#d9d9d9")

        self.text1 = tk.Text(top)
        self.text1.place(relx=0.05, rely=0.511, relheight=0.142, relwidth=0.885)
        self.text1.configure(background="white")
        self.text1.configure(font="TkTextFont")
        self.text1.configure(foreground="black")
        self.text1.configure(highlightbackground="#d9d9d9")
        self.text1.configure(highlightcolor="black")
        self.text1.configure(insertbackground="black")
        self.text1.configure(selectbackground="#c4c4c4")
        self.text1.configure(selectforeground="black")
        self.text1.configure(wrap="word")

        self.Text2 = tk.Text(top)
        self.Text2.place(relx=0.05, rely=0.711, relheight=0.253, relwidth=0.885)
        self.Text2.configure(background="white")
        self.Text2.configure(cursor="fleur")
        self.Text2.configure(font="TkTextFont")
        self.Text2.configure(foreground="black")
        self.Text2.configure(highlightbackground="#d9d9d9")
        self.Text2.configure(highlightcolor="black")
        self.Text2.configure(insertbackground="black")
        self.Text2.configure(selectbackground="#c4c4c4")
        self.Text2.configure(selectforeground="black")
        self.Text2.configure(wrap="word")

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.05, rely=0.667, height=11, width=74)
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(text='''Clock Log :''')

        self.changeLabel()

    def changeLabel(self):
        self.time2 = time.strftime('%H:%M:%S')
        self.Label2.configure(text=self.time2)
        self.Label2.after(200, self.changeLabel)
        saveEntry = self.IDEntry.get()

    def getSubmit(self):
        IDInput = self.IDEntry.get()
        return IDInput


def submitButton():
    print(Toplevel1.saveEntry)
        

#toOutside :


if __name__ == '__main__':
    vp_start_gui()





